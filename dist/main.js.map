{"mappings":"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","sources":["src/main.ts","src/formBox-react.tsx","src/formBox.ts","src/util/mapObject.ts","src/util/isObject.ts","src/util/subscriptionBox.ts","src/util/getComparison.ts","src/util/isEqual.ts","src/util/clone.ts","src/formBox-yup.ts"],"sourcesContent":["export {\n  useCreateFormBox,\n  useFormBox,\n  useFormEffect,\n  useFormState,\n  useInputProps,\n  useTouchedErrors,\n  FormBoxProvider,\n} from './formBox-react';\n\nexport { createYupValidator } from './formBox-yup';\n","import get from 'just-safe-get';\nimport React, { createContext, useContext, useEffect, useMemo, useRef, useState } from 'react';\n\nimport {\n  CastProperties,\n  cleanPath,\n  FormBox,\n  FormBoxConfig,\n  FormBoxInputPropsConfig,\n  FormBoxState,\n  Selector,\n  SelectorPath,\n} from './formBox';\nimport { mapObject } from './util/mapObject';\n\nconst formContext = createContext<FormBox<any>>(null as FormBox<any>);\n\nexport function FormBoxProvider<TValues extends object>({\n  form,\n  ...other\n}: {\n  form: FormBox<TValues>;\n  children: any;\n}) {\n  return <formContext.Provider value={form} {...other} />;\n}\n\nexport function useCreateFormBox<TValues extends object>(\n  config: FormBoxConfig<TValues>,\n): FormBox<TValues> {\n  const formRef = useRef<FormBox<TValues>>();\n  if (!formRef.current) {\n    formRef.current = new FormBox<TValues>(config);\n  }\n  formRef.current!.config = config;\n\n  useEffect(() => {\n    // if (formRef.current!.config.validateOnMount) formRef.current!.validate();\n    return () => formRef.current!.destroy();\n  }, []);\n\n  return formRef.current!;\n}\n\n/*\nReturns the current form object.\n*/\nexport function useFormBox<TValues extends object>(): FormBox<TValues> {\n  return useContext(formContext)!;\n}\n\nexport function useInputProps(\n  path: SelectorPath,\n  config?: FormBoxInputPropsConfig,\n  deps: any[] = [],\n) {\n  const form = useFormBox();\n  const value = useFormState(['values', ...cleanPath(path)], form);\n  return useMemo(\n    () => ({ value, ...form.getInputHandlers(path, config) }),\n    [value, JSON.stringify(path), ...deps],\n  );\n}\n\n/*\nReturns the current form state returned by `selector` and re-renders the component whenever it changes.\n*/\nexport function useFormState<TValues extends object = any, TOut = any>(\n  selector: Selector<FormBoxState<TValues>, TOut>,\n  form?: FormBox<TValues>,\n): TOut {\n  form = form || useContext(formContext)!;\n  const [, trigger] = useState({});\n  useFormEffect(selector, () => trigger({}), form);\n  return createPathSelector(selector)(form.state);\n}\n\n/*\nTriggers `effect` to run whenever the state value returned by `selector` changes.\n */\nexport function useFormEffect<TValues extends object>(\n  selector: Selector<FormBoxState<TValues>, any>,\n  effect: (val: any) => void,\n  form?: FormBox<TValues>,\n) {\n  form = form || useContext(formContext)!;\n  useEffect(() => {\n    const unsub = form!.subscribe(createPathSelector(selector), (val: any) => effect(val));\n    return () => unsub();\n  }, [JSON.stringify(selector)]);\n}\n\n/*\nUtility hook that returns only the errors for fields that are also touched.\n */\nexport function useTouchedErrors<TValues extends object>(\n  form?: FormBox<TValues>,\n): CastProperties<TValues, string> | null {\n  const errors = useFormState('errors', form);\n  const touched = useFormState('touched', form);\n  return mapObject<CastProperties<TValues, string>>(\n    errors,\n    (val: boolean, path: string[]) => (get(touched, path) ? val : undefined),\n    { omitEmpty: true },\n  );\n}\n\n/**\n * Given a selector `path`, returns a function that accepts an object and returns the value located at `path`.\n */\nconst createPathSelector =\n  <TIn, TOut>(path: Selector<TIn, TOut>) =>\n  (data: TIn): TOut =>\n    typeof path === 'function' ? path(data) : get(data, cleanPath(path));\n","import set from 'just-safe-set';\nimport get from 'just-safe-get';\nimport extend from 'just-extend';\nimport { mapObject } from './util/mapObject';\nimport SubscriptionBox, { SelectorFn } from './util/subscriptionBox';\nimport clone from './util/clone';\n\n// SelectorPath represents a path to select a property from an object. It is either a dot-separated string or an array of string/numbers.\nexport type SelectorPath = string | Array<string | number | null | undefined>;\n\n// Selector is either a SelectorPath or SelectorFn\nexport type Selector<TIn, TOut> = SelectorPath | SelectorFn<TIn, TOut>;\n\ntype ValidatorFn<TValues extends object> = (values: TValues) => any | Promise<any>;\n\nexport interface FormBoxConfig<TValues extends object> {\n  initialValues: TValues;\n  initialState?: Partial<FormBoxState<TValues>> | ((state: FormBoxState<TValues>) => void);\n  validate?: ValidatorFn<TValues> | ValidatorFn<TValues>[];\n  onSubmit?(values: TValues): void | Promise<void>;\n  validateOnBlur?: boolean; // default true\n  validateOnChange?: boolean; // default true\n  validateOnMount?: boolean; // default true\n}\n\nexport interface FormBoxState<TValues extends object> {\n  values: TValues;\n  initialValues: TValues;\n  submitting: boolean;\n  validating: boolean;\n  dirty?: CastProperties<TValues, boolean>;\n  touched?: CastProperties<TValues, boolean>;\n  active?: CastProperties<TValues, boolean>;\n  errors?: CastProperties<TValues, string>;\n  meta?: any;\n  submitCount: number;\n  valid: boolean;\n}\n\ntype GenericEventHandler = (e: any) => void;\n\nexport interface FormBoxInputPropsConfig {\n  type?: 'input' | 'checkbox' | 'raw';\n  onChange?: GenericEventHandler;\n  onBlur?: GenericEventHandler;\n  onFocus?: GenericEventHandler;\n  validateOnBlur?: boolean;\n  validateOnChange?: boolean;\n}\n\nexport interface FormBoxInputHandlers {\n  onChange: GenericEventHandler;\n  onFocus: GenericEventHandler;\n  onBlur: GenericEventHandler;\n}\n\nexport class FormBox<TValues extends object> implements FormBoxState<TValues> {\n  private _userConfig: FormBoxConfig<TValues>;\n  private box: SubscriptionBox<FormBoxState<TValues>>;\n\n  constructor(config: FormBoxConfig<TValues>) {\n    this._userConfig = config;\n    this.box = new SubscriptionBox<FormBoxState<TValues>>({} as any);\n    this.reset();\n\n    this.box.subscribe(\n      (data) => data.values,\n      () => {\n        this.box.set((data) => {\n          data.dirty = mapObject(\n            this.values,\n            (value, path) => {\n              const init = get(this.initialValues, path);\n              return init === value ? undefined : true;\n            },\n            { omitEmpty: true },\n          );\n        });\n      },\n    );\n    this.box.subscribe(\n      (data) => !!data.errors,\n      () => {\n        this.box.set((data) => {\n          data.valid = !!data.errors\n        });\n      },\n    );\n  }\n\n  // Returns the user's config merged with defaults\n  get config() {\n    return Object.assign(\n      { validateOnBlur: true, validateOnChange: true, validateOnMount: true },\n      this._userConfig,\n    );\n  }\n  set config(value: FormBoxConfig<TValues>) {\n    this._userConfig = value;\n  }\n\n  destroy() {\n    this.box.unsubscribeAll();\n  }\n\n  setValue(path: SelectorPath, value: any): void {\n    this.setState(['values', ...cleanPath(path)], value);\n  }\n\n  get state() {\n    return this.box.data;\n  }\n\n  setState(selector: SelectorPath, value: any): void;\n  setState(stateSetter: (state: FormBoxState<TValues>) => void): void;\n\n  setState(\n    stateSetter: SelectorPath | ((state: FormBoxState<TValues>) => void),\n    value?: any,\n  ): void {\n    this.box.set(\n      typeof stateSetter === 'function'\n        ? stateSetter\n        : (data) => {\n            set(data, cleanPath(stateSetter), value);\n          },\n    );\n  }\n\n  getState(selector: SelectorPath): any {\n    return get(this.box.data, cleanPath(selector));\n  }\n\n  subscribe = <TOut>(\n    selector: SelectorFn<FormBoxState<TValues>, TOut>,\n    callback: (val: TOut) => void,\n  ): (() => void) => {\n    return this.box.subscribe(selector, callback);\n  };\n\n  validate = async (values?: TValues): Promise<any> => {\n    if (!this.config.validate) return;\n    this.box.set((data) => {\n      data.validating = true;\n    });\n    values = values || this.values;\n    try {\n      const validators = Array.isArray(this.config.validate)\n        ? this.config.validate\n        : [this.config.validate];\n      let result: any;\n      for (const v of validators) {\n        result = await v(values);\n        if (result) break;\n      }\n      this.box.set((data) => {\n        data.errors = result;\n      });\n      return result;\n    } catch (error) {\n      this.box.set((data) => {\n        data.errors = error;\n      });\n      return error;\n    } finally {\n      this.box.set((data) => {\n        data.validating = false;\n      });\n    }\n  };\n\n  handleSubmit = async (e: any): Promise<void> => {\n    e.preventDefault();\n    await this.submit();\n  };\n\n  submit = async () => {\n    try {\n      this.box.set((data) => {\n        data.submitting = true;\n        data.touched = mapObject(data.values, () => true);\n        data.submitCount++;\n      });\n      const errors = await this.validate();\n      if (!errors) await this.config.onSubmit?.(this.box.data.values);\n    } finally {\n      this.box.set((data) => {\n        data.submitting = false;\n      });\n    }\n  };\n\n  getInputHandlers = (\n    path: SelectorPath,\n    inputConfig?: FormBoxInputPropsConfig,\n  ): FormBoxInputHandlers => {\n    return {\n      onChange: async (e: any) => {\n        this.box.set((data) => {\n          let value: any;\n          if (inputConfig?.type === 'checkbox')\n            value = e.target.checked ? e.target.value ?? true : undefined;\n          else if (inputConfig?.type === 'raw') value = e;\n          else value = e.target.value;\n          set(data, ['values', ...cleanPath(path)], value);\n          set(data, ['touched', ...cleanPath(path)], true);\n        });\n        inputConfig?.onChange?.(e);\n        if (inputConfig.validateOnChange !== false && this.config.validateOnChange !== false)\n          await this.validate();\n      },\n      onFocus: (e: any) => {\n        this.box.set((data) => {\n          set(data, ['active', ...cleanPath(path)], true);\n        });\n        inputConfig?.onFocus?.(e);\n      },\n      onBlur: async (e: any) => {\n        this.box.set((data) => {\n          set(data, ['active', ...cleanPath(path)], false);\n          set(data, ['touched', ...cleanPath(path)], true);\n        });\n        inputConfig?.onBlur?.(e);\n        if (inputConfig.validateOnBlur !== false && this.config.validateOnBlur !== false)\n          await this.validate();\n      },\n    };\n  };\n\n  reset = () => {\n    const formState: FormBoxState<TValues> = {\n      values: clone(this.config.initialValues),\n      initialValues: clone(this.config.initialValues),\n      submitting: false,\n      validating: false,\n      submitCount: 0,\n      valid: true\n    };\n\n    if (typeof this.config.initialState === 'function') {\n      (this.config.initialState as any)(formState);\n    } else if (this.config.initialState) {\n      extend(true, formState, this.config.initialState);\n    }\n\n    formState.valid = !!formState.errors;\n\n    this.box.set(formState);\n  };\n\n  /**\n   * Convenience method that \"touches\" all fields that are currently in state.values.\n   */\n  touchAll = () => {\n    this.setState((state) => {\n      state.touched = mapObject(state.values, () => true);\n    });\n  };\n\n  // FormBoxState implementation\n\n  get values() {\n    return this.box.data.values;\n  }\n  get initialValues() {\n    return this.box.data.initialValues;\n  }\n  get submitting() {\n    return this.box.data.submitting;\n  }\n  get validating() {\n    return this.box.data.validating;\n  }\n  get dirty() {\n    return this.box.data.dirty;\n  }\n  get touched() {\n    return this.box.data.touched;\n  }\n  get active() {\n    return this.box.data.active;\n  }\n  get errors() {\n    return this.box.data.errors;\n  }\n  get meta() {\n    return this.box.data.meta;\n  }\n  get submitCount() {\n    return this.box.data.submitCount;\n  }\n  get valid() {\n    return !this.box.data.valid;\n  }\n}\n\n/**\n * Resolves to a type that has all properties of TObject cast as type TProperty, recursively into objects and arrays\n */\nexport type CastProperties<TObject extends object, TProperty> = {\n  [K in keyof TObject]?: TObject[K] extends any[]\n    ? TObject[K][number] extends object\n      ? CastProperties<TObject[K][number], TProperty>[]\n      : TProperty\n    : TObject[K] extends object\n    ? CastProperties<TObject[K], TProperty>\n    : TProperty;\n};\n\n/**\n * Returns a flat array of non-empty strings from `path`, which may be a single object path string\n * or a nested array of object path strings.\n */\nexport function cleanPath(path: SelectorPath): string[] {\n  return Array.isArray(path)\n    ? (path.filter(Boolean).map(String) as string[])\n    : path.split(/[.\\[\\]]/).filter(Boolean);\n}\n","/*\n# mapObject\n\nMaps an object recursively by calling `callback` on each property and replacing the value with the result.\n`callback` is not invoked for properties that contain objects or arrays, but instead `mapObject` is called\nrecursively on those values.\n\n`callback` is passed the following parameters:\n  - `value` - The current value\n  - `path` - The path to the value as an array\n  - `object` - The original object being mapped\n\nIf the result of `callback` is undefined, the property will be absent from the resulting object.\n\n`options` is an object with the following properties:\n  - `mutate` - If true, the original object will be mutated (default false)\n  - `omitEmpty` - If true, mapped objects and arrays that are empty will be omitted from the result (default false)\n */\n\nimport isObject from './isObject';\n\ninterface MapObjectOptions {\n  mutate?: boolean;\n  omitEmpty?: boolean;\n}\n\nexport function mapObject<TOut>(\n  object: any,\n  callback: (value: any, path: string[], root: any) => any,\n  options?: MapObjectOptions,\n): TOut {\n  return _mapObject(object, callback, options || {}, new WeakMap(), [], object);\n}\n\nfunction _mapObject(\n  object: any,\n  callback: (value: any, path: string[], root: any) => any,\n  options: MapObjectOptions,\n  cache: any,\n  path: string[],\n  root: any,\n): any {\n  if (!Array.isArray(object) && !isObject(object)) return object;\n  if (cache.has(object)) return cache.get(object);\n\n  const result = options.mutate ? object : Array.isArray(object) ? [] : {};\n  cache.set(object, result);\n\n  for (const k in object) {\n    const val = object[k];\n    const mapped =\n      isObject(val) || Array.isArray(val)\n        ? _mapObject(val, callback, options, cache, [...path, k], root)\n        : callback.call(null, val, [...path, k], root);\n    if (mapped !== undefined) result[k] = mapped;\n  }\n\n  if (\n    !options.omitEmpty ||\n    (isObject(result) && Object.keys(result).length) ||\n    (Array.isArray(result) && result.length)\n  )\n    return result;\n}\n","export default function isObject(value: any): boolean {\n  return !!value && Object.getPrototypeOf(value) === Object.prototype;\n}\n","import getComparison from './getComparison';\nimport clone from './clone';\n\n/**\n # SubscriptionBox\n\n A SubscriptionBox is an object that holds arbitrary data, allowing you set/get properties and subscribe to changes.\n The change algorithm does deep-comparisons, so you'll only be notified if properties actually change value\n (not simply whenever `set` is called).\n\n ```js\n const box = new SubscriptionBox({\n   firstName: 'Johnny',\n   favoriteBook: {\n     title: 'Green Eggs and Ham',\n     author: 'Dr. Seuss'\n   }\n });\n\n const unsubscribe = box.subscribe(\n   data => data.favoriteBook,\n   (favoriteBook) => {\n     ...\n   }\n );\n ...\n unsubscribe();\n\n box.set(data => {\n   // `data` is a mutable clone - change its value; don't return it\n   data.favoriteBook.title = 'Horton Hears a Who'\n });\n\n // `box.data` is a read-only getter\n box.data.favoriteBook;\n ```\n */\n\nexport type SelectorFn<TIn, TOut extends any> = (input: TIn) => TOut;\n\nexport interface Subscription<TIn, TOut> {\n  selector: (data: TIn) => TOut;\n  callback: (_: TOut) => void;\n  unsubscribe: () => void;\n}\n\nexport default class SubscriptionBox<TData extends object> {\n  private _data: TData;\n  private subscriptions = new Set<Subscription<TData, any>>();\n\n  constructor(data: TData) {\n    this._data = data;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  set = (data: TData | ((data: TData) => TData | void)) => {\n    let newData = data;\n    if (typeof data === 'function') {\n      try {\n        newData = clone(this.data);\n      } catch (e) {\n        const err: any = new Error('Error cloning subscriptionBox data: ' + e.message);\n        err.data = this.data;\n        err.innerError = e;\n        throw err;\n      }\n      let result = (data as any)(newData);\n      if (typeof result !== 'undefined') newData = result;\n    }\n    const oldData = this.data;\n    try {\n      this._data = getComparison(this.data, newData);\n    } catch (e) {\n      const err: any = new Error('Error comparing subscriptionBox data: ' + e.message);\n      err.newData = newData;\n      err.innerError = e;\n      throw err;\n    }\n    this.subscriptions.forEach((sub) => {\n      const oldValue = sub.selector(oldData);\n      const newValue = sub.selector(this.data);\n      if (oldValue !== newValue) sub.callback(newValue);\n    });\n  };\n\n  subscribe = <TOut>(\n    selector: SelectorFn<TData, TOut>,\n    callback: (val: TOut) => void,\n  ): (() => void) => {\n    const sub = { selector, callback } as Subscription<TData, TOut>;\n    this.subscriptions.add(sub);\n    sub.unsubscribe = () => this.subscriptions.delete(sub);\n    return sub.unsubscribe;\n  };\n\n  unsubscribeAll = () => {\n    this.subscriptions.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  };\n}\n","import isEqual from './isEqual';\nimport clone from './clone';\nimport isObject from './isObject';\n\n/**\n https://gist.github.com/brombal/6fc10953c0b082bb12444ba7feb24e4b\n\n # getComparison\n\n Returns an object that can be used to compare `a` and `b` (and their nested properties) using `===`.\n\n The return value will be structurally the same as `b`. However, any properties that are\n equivalent objects (using a deep comparison) to `a`'s properties will be comparable using `===`.\n This will be true for properties at any nested level, including the top level (i.e. if `a` and `b`\n are equivalent, `a` will be identical to the return value).\n\n E.g.:\n\n ```\n const a = {\n    firstName: 'Alex',\n    favoriteBook: {\n      title: 'Green Eggs and Ham',\n      author: 'Dr. Seuss'\n    },\n    favoriteSong: {\n      title: 'Row row row your boat',\n      composer: 'Unknown'\n    }\n  };\n const b = {\n    firstName: 'Alex',\n    favoriteBook: {\n      title: 'Green Eggs and Ham',\n      author: 'Dr. Seuss'\n    },\n    favoriteSong: {\n      title: 'Twinkle twinkle',\n      composer: 'Mozart'\n    }\n  };\n const comparison = getComparison(a, b);\n a === comparison // false\n a.firstName === comparison.firstName // true\n a.favoriteBook === comparison.favoriteBook // true\n a.favoriteSong === comparison.favoriteSong // false\n ```\n */\nexport default function getComparison(a: any, b: any): any {\n  if (a === b) return a;\n  if (!a || !b) return b;\n  if (isEqual(a, b, true)) return a;\n\n  if (a.constructor === b.constructor && (Array.isArray(a) || isObject(a))) {\n    let changed = false;\n    const result: any = Array.isArray(a) ? [] : {};\n    for (const key in b) {\n      const compared = getComparison(a[key], b[key]);\n      if (compared !== a[key]) {\n        result[key] = compared;\n        changed = true;\n      } else {\n        result[key] = a[key];\n      }\n    }\n    for (const key in a) {\n      if (!(key in b)) changed = true;\n    }\n    return changed ? result : a;\n  }\n\n  return clone(b);\n}\n","export default function isEqual(a: any, b: any, shallow = false): boolean {\n  if (a === b) return true;\n\n  if (!a || !b) return false;\n\n  if (a.constructor !== b.constructor) return false;\n\n  if (typeof a !== 'object') return a === b;\n\n  if (a instanceof Date) return a.toISOString() === b.toISOString();\n\n  if (a instanceof Set) {\n    if (a.size !== b.size) return false;\n    for (const i of a) {\n      if (!b.has(i)) return false;\n    }\n    return true;\n  }\n\n  if (a instanceof Map) {\n    if (a.size !== b.size) return false;\n    for (const [k, v] of a.entries()) {\n      if (shallow ? a.get(k) !== b.get(k) : !isEqual(a.get(k), b.get(k))) return false;\n    }\n    return true;\n  }\n\n  if (Array.isArray(a)) {\n    if (a.length !== b.length) return false;\n    for (const i in a) {\n      if (shallow ? a[i] !== b[i] : !isEqual(a[i], b[i])) return false;\n    }\n    return true;\n  }\n\n  if (!a.toString().startsWith('[object ')) {\n    return a.toString() === b.toString();\n  }\n\n  if (Object.keys(a).length !== Object.keys(b).length) return false;\n  for (const k in a) {\n    if (shallow ? a[k] !== b[k] : !isEqual(a[k], b[k])) return false;\n  }\n  return true;\n}\n","import isObject from './isObject';\n\nexport default function clone(value: any) {\n  if (!value) return value;\n  if (typeof value !== 'object') return value;\n  if (Array.isArray(value)) return Array.from(value);\n  if (value.constructor === Error) return new Error(value.message);\n  if (value.constructor === Date) return new Date(value);\n  if (value.constructor === RegExp) return new RegExp(value);\n  if (isObject(value)) {\n    const result: any = {};\n    for (const k in value) {\n      result[k] = clone(value[k]);\n    }\n    return result;\n  }\n  throw new Error(`Cannot clone value: ${value} of type ${value.constructor.name}`);\n}\n","import { AnySchema, ValidationError } from 'yup';\nimport set from 'just-safe-set';\nimport get from 'just-safe-get';\n\nexport const createYupValidator = (schema: AnySchema) => {\n  return async (values: any) => {\n    try {\n      await schema.validate(values, { context: values, abortEarly: false });\n      return null;\n    } catch (err) {\n      return yupErrorToObject(err);\n    }\n  };\n};\n\nfunction yupErrorToObject(yupError: ValidationError): object {\n  const errors: any = {};\n\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      set(errors, yupError.path!, yupError.message);\n      return errors;\n    }\n\n    for (const err of yupError.inner) {\n      if (!get(errors, err.path!)) {\n        set(errors, err.path!, err.message);\n      }\n    }\n  }\n\n  return errors;\n}\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}